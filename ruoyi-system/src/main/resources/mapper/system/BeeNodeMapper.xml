<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.BeeNodeMapper">
    
    <resultMap type="com.ruoyi.common.core.domain.entity.BeeNode" id="BeeNodeResult">
        <result property="nodeId"    column="node_id"    />
        <result property="userId"    column="user_id"    />
        <result property="hostId"    column="host_id"    />
        <result property="nodeName"    column="node_name"    />
        <result property="nodePass"    column="node_pass"    />
        <result property="ethereum"    column="ethereum"    />
        <result property="peersnum"    column="peersNum"    />
        <result property="balancenum"    column="balanceNum"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>


    <resultMap type="com.ruoyi.common.core.domain.entity.BeeNode" id="BeeNodeResult1">
        <result property="nodeId"    column="node_id"    />
        <result property="userId"    column="user_id"    />
        <result property="hostId"    column="host_id"    />
        <result property="nodeName"    column="node_name"    />
        <result property="nodePass"    column="node_pass"    />
        <result property="ethereum"    column="ethereum"    />
        <result property="peersnum"    column="peersNum"    />
        <result property="balancenum"    column="balanceNum"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <association property="beeHost"    column="host_id" javaType="com.ruoyi.common.core.domain.entity.BeeHost">
            <id     property="hostId"   column="host_id"     />
            <result property="hostIp"    column="host_ip"    />
            <result property="hostUser"    column="host_user"    />
            <result property="hostPass"    column="host_pass"    />
            <result property="nodeCnt"    column="node_cnt"    />
            <result property="status"    column="status"    />
            <result property="createBy"    column="create_by"    />
            <result property="createTime"    column="create_time"    />
            <result property="updateBy"    column="update_by"    />
            <result property="updateTime"    column="update_time"    />
            <result property="remark"    column="remark"    />
        </association>
    </resultMap>


    <sql id="selectBeeNodeVo">
        select node_id, user_id, host_id, node_name, node_pass, ethereum, peersNum, balanceNum, status, create_by, create_time, update_by, update_time, remark from bee_node
    </sql>

    <select id="selectBeeNodeList" parameterType="BeeNode" resultMap="BeeNodeResult1">
        <!--include refid="selectBeeNodeVo"/-->
        select n.node_id, n.user_id, n.host_id, n.node_name, n.node_pass, n.ethereum, n.peersNum, n.balanceNum, n.status, n.create_by, n.create_time, n.update_by, n.update_time, n.remark,
        h.host_ip
        from bee_node n
        left join bee_host h on n.host_id = h.host_id
        <where>  
            <if test="userId != null  and userId != ''"> and n.user_id = #{userId}</if>
            <if test="hostId != null "> and n.host_id = #{hostId}</if>
            <if test="nodeName != null  and nodeName != ''"> and n.node_name like concat('%', #{nodeName}, '%')</if>
            <if test="nodePass != null  and nodePass != ''"> and n.node_pass = #{nodePass}</if>
            <if test="ethereum != null  and ethereum != ''"> and n.ethereum = #{ethereum}</if>
            <if test="peersnum != null "> and n.peersNum = #{peersnum}</if>
            <if test="balancenum != null "> and n.balanceNum = #{balancenum}</if>
            <if test="status != null  and status != ''"> and n.status = #{status}</if>
        </where>
    </select>
    
    <select id="selectBeeNodeById" parameterType="Long" resultMap="BeeNodeResult">
        <include refid="selectBeeNodeVo"/>
        where node_id = #{nodeId}
    </select>
        
    <insert id="insertBeeNode" parameterType="BeeNode" useGeneratedKeys="true" keyProperty="nodeId">
        insert into bee_node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId != ''">user_id,</if>
            <if test="hostId != null">host_id,</if>
            <if test="nodeName != null and nodeName != ''">node_name,</if>
            <if test="nodePass != null">node_pass,</if>
            <if test="ethereum != null">ethereum,</if>
            <if test="peersnum != null">peersNum,</if>
            <if test="balancenum != null">balanceNum,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="hostId != null">#{hostId},</if>
            <if test="nodeName != null and nodeName != ''">#{nodeName},</if>
            <if test="nodePass != null">#{nodePass},</if>
            <if test="ethereum != null">#{ethereum},</if>
            <if test="peersnum != null">#{peersnum},</if>
            <if test="balancenum != null">#{balancenum},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBeeNode" parameterType="BeeNode">
        update bee_node
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="hostId != null">host_id = #{hostId},</if>
            <if test="nodeName != null and nodeName != ''">node_name = #{nodeName},</if>
            <if test="nodePass != null">node_pass = #{nodePass},</if>
            <if test="ethereum != null">ethereum = #{ethereum},</if>
            <if test="peersnum != null">peersNum = #{peersnum},</if>
            <if test="balancenum != null">balanceNum = #{balancenum},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where node_id = #{nodeId}
    </update>

    <delete id="deleteBeeNodeById" parameterType="Long">
        delete from bee_node where node_id = #{nodeId}
    </delete>

    <delete id="deleteBeeNodeByIds" parameterType="String">
        delete from bee_node where node_id in 
        <foreach item="nodeId" collection="array" open="(" separator="," close=")">
            #{nodeId}
        </foreach>
    </delete>
</mapper>